@model TicketManagement.Web.Models.TicketViewModel

@{
    ViewData["Title"] = $"Ticket #{Model.TicketId}";
    Layout = "_Layout";
}

<!-- Hidden fields for JavaScript placed at the very top of the page -->
<input type="hidden" id="ticketId" value="@Model.TicketId" />
<input type="hidden" id="currentUserId" value="@ViewBag.CurrentUserId" />

<div class="card mb-4">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h3 class="mb-0">Ticket #@Model.TicketId - @Model.Subject</h3>
        <div>
            <a asp-action="UserTickets" asp-route-id="@Model.UserId" class="btn btn-light me-2">Back to User's Tickets</a>
            @if (Model.Status == "Open")
            {
                <a asp-action="RespondToTicket" asp-route-id="@Model.TicketId" class="btn btn-success me-2">Respond</a>
                <form asp-action="CloseTicket" asp-route-id="@Model.TicketId" method="post" class="d-inline">
                    <button type="submit" class="btn btn-warning" onclick="return confirm('Are you sure you want to close this ticket?')">Close Ticket</button>
                </form>
            }
            else
            {
                <form asp-action="ReopenTicket" asp-route-id="@Model.TicketId" method="post" class="d-inline me-2">
                    <button type="submit" class="btn btn-success" onclick="return confirm('Are you sure you want to reopen this ticket?')">Reopen Ticket</button>
                </form>
                <a asp-action="RespondToTicket" asp-route-id="@Model.TicketId" class="btn btn-info">Add Response</a>
            }
        </div>
    </div>
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card dashboard-card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Ticket Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-2">
                            <strong>User:</strong> @Model.UserName
                        </div>
                        <div class="mb-2 d-flex">
                            <strong class="me-2">Status:</strong>
                            @if (Model.Status == "Open")
                            {
                                <span class="badge badge-open">@Model.Status</span>
                            }
                            else
                            {
                                <span class="badge badge-closed">@Model.Status</span>
                            }
                        </div>
                        <div class="mb-2 d-flex">
                            <strong class="me-2">Priority:</strong>
                            @switch (Model.Priority)
                            {
                                case "Low":
                                    <span class="badge priority-low">@Model.Priority</span>
                                    break;
                                case "Medium":
                                    <span class="badge priority-medium">@Model.Priority</span>
                                    break;
                                case "High":
                                    <span class="badge priority-high">@Model.Priority</span>
                                    break;
                                case "Critical":
                                    <span class="badge priority-critical">@Model.Priority</span>
                                    break;
                            }
                        </div>
                        <div class="mb-2">
                            <strong>Category:</strong> @Model.Category
                        </div>
                        <div class="mb-2">
                            <strong>Sub-Category:</strong> @(string.IsNullOrEmpty(Model.SubCategory) ? "N/A" : Model.SubCategory)
                        </div>
                        <div class="mb-2">
                            <strong>Created:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                        </div>
                        @if (Model.ClosedAt.HasValue)
                        {
                            <div class="mb-2">
                                <strong>Closed:</strong> @Model.ClosedAt.Value.ToString("MMM dd, yyyy HH:mm")
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="mb-0">Description</h5>
            </div>
            <div class="card-body">
                <p class="card-text">@Model.Description</p>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.AdminResponse))
        {
            <div class="card mb-4 border-success">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Admin Response</h5>
                </div>
                <div class="card-body">
                    <p class="card-text">@Model.AdminResponse</p>
                </div>
            </div>
        }
        
        <!-- Chat Section -->
        <div class="card mb-4">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Chat</h5>
                <div class="d-flex align-items-center">
                    <div class="theme-toggle mx-2">
                        <!-- Toggle will be added by JavaScript -->
                    </div>
                    <div class="connection-status">
                        <span class="badge bg-secondary" id="connection-status-badge" data-bs-toggle="tooltip" title="Establishing connection... (Click to check connection)">Connecting...</span>
                    </div>
                </div>
            </div>
            <div class="card-body chat-container p-0" style="max-height: 400px; overflow-y: auto;" id="chat-messages">
                @if (ViewBag.Messages != null && ViewBag.Messages.Count > 0)
                {
                    <div class="messages">
                        <!-- Messages will be populated by JavaScript -->
                    </div>
                }
                else
                {
                    <div class="text-center p-4" id="no-messages">
                        <p class="text-muted">No messages yet. Start the conversation!</p>
                    </div>
                }
            </div>
            
            <!-- Message Form -->
            @if (Model.Status == "Open")
            {
                <div class="card-footer p-0">
                    <form id="message-form">
                        <div class="input-group">
                            <input type="text" id="message-content" class="form-control" placeholder="Type your message..." required />
                            <button type="submit" class="btn">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>
                    </form>
                </div>
            }
            else
            {
                <div class="card-footer text-muted text-center">
                    This ticket is closed. Reopen it to send messages.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"></script>
    <script src="~/js/chat.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize chat with configuration
            Chat.init({
                ticketId: @Model.TicketId,
                userId: @ViewBag.CurrentUserId,
                isAdmin: true // Admin view always has admin privileges
            });
        });
    </script>
}

<style>
    /* These styles will be overridden by the JavaScript-added styles */
    .message {
        margin-bottom: 10px;
    }
    
    .message-sent {
        text-align: right;
    }
    
    .message-received {
        text-align: left;
    }
    
    .message-content {
        display: inline-block;
        border-radius: 10px;
        max-width: 80%;
    }
    
    .badge-open {
        background-color: #28a745;
        color: white;
    }
    
    .badge-closed {
        background-color: #dc3545;
        color: white;
    }
    
    .priority-low {
        background-color: #28a745;
        color: white;
    }
    
    .priority-medium {
        background-color: #17a2b8;
        color: white;
    }
    
    .priority-high {
        background-color: #ffc107;
        color: black;
    }
    
    .priority-critical {
        background-color: #dc3545;
        color: white;
    }
    
    /* Chat header layout */
    .card-header:has(.connection-status) {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    
    .connection-status {
        display: flex;
        align-items: center;
    }
    
    .theme-toggle {
        margin-right: 10px;
    }
</style> 